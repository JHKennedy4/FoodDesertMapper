var baseMap =  new L.StamenTileLayer("toner");

function loadMap() {
    // add the baseMap to the layer
    F.map.addLayer(baseMap);

    function onEachFeature(feature, layer) {
    // does this feature have a property named popupContent?
        if (feature.properties) {
            layer.bindPopup("<div class='text-center'>" +
                    feature.properties.store_name +
                    "<br><a class='btn' href='/rate/" +
                    feature.properties.cartodb_id + "'>Rate</a></div>");
        }
    }

    function pointToLayer(feature) {
    // change market icons
        var marketMarker = L.AwesomeMarkers.icon({
            icon: 'shopping-cart',
            color:  'blue',
        });

        return L.marker([feature.geometry.coordinates[1], feature.geometry.coordinates[0]], {icon: marketMarker, riseOnHover: true});
    }

    // build map queries
    F.marketLayer = {};
    $.ajax({url: 'http://jhk.cartodb.com/api/v2/sql?format=GeoJSON&q=SELECT cartodb_id, the_geom_webmercator, store_name, the_geom FROM snap WHERE the_geom %26%26 ST_MakeEnvelope(' + F.map.getBounds().toBBoxString() + ') LIMIT 1000'})
        .done(function (data) {
            console.log(data);
            F.marketLayer = L.geoJson(data, { pointToLayer: pointToLayer, onEachFeature: onEachFeature }).addTo(F.map);
        })
        .fail(function () {
            alert("fail");
        });

    F.map.on('movestart', function () {
        F.marketLayer.clearLayers();
    });
    F.map.on('dragstart', function () {
        F.marketLayer.clearLayers();
    });
    F.map.on('zoomstart', function () {
        F.marketLayer.clearLayers();
    });

    F.map.on('moveend', function () {
        $.ajax({url: 'http://jhk.cartodb.com/api/v2/sql?format=GeoJSON&q=SELECT cartodb_id, the_geom_webmercator, store_name, the_geom FROM snap WHERE the_geom %26%26 ST_MakeEnvelope(' + F.map.getBounds().toBBoxString() + ') LIMIT 1000'})
        .done(function (data) {
            console.log(data);
            F.marketLayer = L.geoJson(data, { pointToLayer: pointToLayer, onEachFeature: onEachFeature }).addTo(F.map);
        })
        .fail(function () {
            alert("fail");
        });
    });
}

function main() {
    console.log("main");
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
                var userMarker;

                console.log("true");
                console.log(position.coords);
                // create a new map at your location
                F.map = new L.map('map', {
                    center: new L.LatLng(position.coords.latitude, position.coords.longitude),
                    zoom: 15
                });

                loadMap();

                // options for the AwesomeMarker
                userMarker = L.AwesomeMarkers.icon({
                   // iconUrl: '/bootstrap/here.svg',
                    icon:   'icon-smile',
                    color:  'red',
                    //iconSize:     [76, 190], // size of the icon
                    //iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
                    //popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
                });

                // create an AwesomeMarker at the user location
                L.marker([position.coords.latitude, position.coords.longitude], {icon: userMarker}).bindPopup('<p>You are here</p>').addTo(F.map);

            }, function (error) {
                console.log("false");
                // create a new map at your location
                F.map = new L.map('map', {
                    center: new L.LatLng(43.0845038, -77.6798767),
                    zoom: 15
                });
                console.log(F.map);

                loadMap();
            });
    } else {

        console.log("false");
        // create a new map at your location
        F.map = new L.map('map', {
            center: new L.LatLng(43.0845038, -77.6798767),
            zoom: 15
        });
        console.log(F.map);

        loadMap();
    }

}

$(document).ready(main());
