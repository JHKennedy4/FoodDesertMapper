{
  "name": "cartodb",
  "description": "CartoDB Node.js client library",
  "private": false,
  "version": "0.0.3",
  "main": "index",
  "url": "https://github.com/Vizzuality/cartodb-nodejs",
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/Vizzuality/cartodb-nodejs.git"
    }
  ],
  "author": {
    "name": "Simon Tokumine, Vizzuality",
    "email": "simon@vizzuality.com",
    "url": "https://github.com/Vizzuality/cartodb-nodejs"
  },
  "contributors": [
    {
      "name": "Dan Zajdband",
      "email": "dan.zajdband@gmail.com"
    },
    {
      "name": "Javi Santana",
      "email": "jsantana@vizzuality.com"
    }
  ],
  "dependencies": {
    "underscore": "1.1.x",
    "oauth": "0.9.5",
    "superagent": "0.4.x"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "CartoDB client for node.js\n=================================\n\nThis library allows to perform async read/write queries to cartodb.\n\nInstall\n------\n\n```bash\nnpm install cartodb\n```\n\n\nUsage\n-----\n\nThe library provides two auth ways, oauth client and api key client. Both  have the same funcionallity and you should choose one of them depending on you requirements. \n\n```javascript\nvar CartoDB = require('cartodb');\nvar secret = require('./secret.js');\n\n\n/* you could change this providing an api_key instead of consumer key / secret if you want to use oath\nclient = new CartoDB({\n       user: secret.USER,\n       password: secret.password,\n       consumer_key: secret.CONSUMER_KEY, \n       consumer_secret: secret.CONSUMER_SECRET\n});\n*/\nvar client = new CartoDB({user: secret.USER,api_key: secret.API_KEY});\n\n\nclient.on('connect', function() {\n    console.log(\"connected\");\n});\n\n// Data if automatically parsed\nclient.on('data', function(data) {\n    console.log(results.rows);\n});\n\nclient.on('error', function(err) {\n    console.log(\"some error ocurred\");\n});\n\n// request two queries\nclient.query(\"select * from {table} limit 5\", {table: 'tracker'}); // template can be used\nclient.query(\"select * from tracker limit 5 offset 5\");\n\n```\n\n\n\nDependencies\n------------\n* nodejs >0.5.0\n* npm\n* CartoDB account\n\n",
  "readmeFilename": "README.md",
  "_id": "cartodb@0.0.3",
  "dist": {
    "shasum": "ef43265fbd9fd11906ba309388e9c5deffeb5817"
  },
  "_from": "cartodb@",
  "_resolved": "https://registry.npmjs.org/cartodb/-/cartodb-0.0.3.tgz"
}
